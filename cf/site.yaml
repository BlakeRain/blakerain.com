#
# site.yaml
#
# CloudFormation template for blakerain.com site
#

Description: CloudFormation template for blakerain.com

Parameters:
  DomainName:
    Type: String
    Description: The domain name to use
    Default: blakerain.com

  HostedZoneId:
    Type: String
    Description: The hosted zone for the domain
    Default: Z2C0W1IB1QO9DO

  CertificateArn:
    Type: String
    Description: The ARN of the site certificate

Resources:
  BlakeRainAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub ${AWS::StackName}-s3-origin-oai

  BlakeRainGitHubDeployerUser:
    Type: AWS::IAM::User
    Properties:
      UserName: BlakeRainGitHubDeployerUser

  BlakeRainGitHubDeployerAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref BlakeRainGitHubDeployerUser

  BlakeRainBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  BlakeRainBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BlakeRainBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${BlakeRainAccessIdentity}
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${BlakeRainBucket}/*
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:user/${BlakeRainGitHubDeployerUser}
            Action:
              - s3:PutObject
              - s3:DeleteObject
            Resource: !Sub arn:aws:s3:::${BlakeRainBucket}/*
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:user/${BlakeRainGitHubDeployerUser}
            Action:
              - s3:ListBucket
            Resource: !Sub arn:aws:s3:::${BlakeRainBucket}

  BlakeRainDistributionOriginRequestFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name: BlakeRainDistributionRequestFunction
      AutoPublish: true
      FunctionConfig:
        Comment: Handle origin requests to add extensions
        Runtime: cloudfront-js-1.0
      FunctionCode: |
        var hasExtension = /(.+)\.[a-zA-Z0-9]{2,12}$/;
        function handler(event) {
          var request = event.request;

          if (request.uri && request.url !== "/" && !request.uri.match(hasExtension)) {
            request.uri = request.uri + ".html";
          }

          return request;
        }

  BlakeRainDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
          - !Sub www.${DomainName}
        Origins:
          - DomainName: !Sub ${BlakeRainBucket}.s3.${AWS::Region}.amazonaws.com
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${BlakeRainAccessIdentity}
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          Compress: true
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt BlakeRainDistributionOriginRequestFunction.FunctionARN
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only

  BlakeRainHostedZoneRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt BlakeRainDistribution.DomainName
        - Name: !Sub www.${DomainName}
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt BlakeRainDistribution.DomainName
        - Name: !Ref DomainName
          Type: AAAA
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt BlakeRainDistribution.DomainName
        - Name: !Sub www.${DomainName}
          Type: AAAA
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt BlakeRainDistribution.DomainName

Outputs:
  BlakeRainGitHubDeployerAccessKeyId:
    Description: Access key for the BlakeRainGitHubDeployer user
    Value: !Ref BlakeRainGitHubDeployerAccessKey
    Export:
      Name: !Sub ${AWS::StackName}-BlakeRainGitHubDeployerAccessKeyId
  BlakeRainGitHubDeployerSecretAccessKey:
    Description: Secret access key for the BlakeRainGitHubDeployer user
    Value: !GetAtt BlakeRainGitHubDeployerAccessKey.SecretAccessKey
    Export:
      Name: !Sub ${AWS::StackName}-BlakeRainGitHubDeployerSecretAccessKey
