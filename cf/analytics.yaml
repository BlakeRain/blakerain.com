#
# analytics.yaml
#
# CloudFormation template for site analytics resources.
#

Description: Site analytics

Parameters:
  DomainName:
    Type: String
    Description: The domain name to use
    Default: blakerain.com

  HostedZoneId:
    Type: String
    Description: The hosted zone for the domain
    Default: Z2C0W1IB1QO9DO

Outputs:
  AnalyticsLambdaDeployerAccessKeyId:
    Value: !Ref AnalyticsLambdaDeployerAccessKey

  AnalyticsLambdaDeployerSecretAccessKey:
    Value: !GetAtt AnalyticsLambdaDeployerAccessKey.SecretAccessKey

Resources:
  AnalyticsVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true

  AnalyticsSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AnalyticsVpc
      AvailabilityZone: eu-west-1a
      CidrBlock: 10.0.4.0/24

  AnalyticsSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AnalyticsVpc
      AvailabilityZone: eu-west-1b
      CidrBlock: 10.0.5.0/24

  AnalyticsLambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref AnalyticsVpc
      GroupDescription: Lambda security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "2049"
          ToPort: "2049"
          CidrIp: "10.0.0.0/16"

  AnalyticsDatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref AnalyticsVpc
      GroupDescription: Database security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "5432"
          ToPort: "5432"
          SourceSecurityGroupId: !Ref AnalyticsLambdaSecurityGroup
          Description: Allow inbound PostgreSQL traffic from Lambda functions

  AnalyticsDatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: analytics_dbsubnet_group
      DBSubnetGroupDescription: Analytics database subnet group
      SubnetIds:
        - !Ref AnalyticsSubnet1
        - !Ref AnalyticsSubnet2

  AnalyticsDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: "20"
      AutoMinorVersionUpgrade: true
      AvailabilityZone: eu-west-1a
      BackupRetentionPeriod: 7
      DBInstanceClass: db.t4g.micro
      DBName: analytics
      DBSubnetGroupName: !Ref AnalyticsDatabaseSubnetGroup
      Engine: postgres
      MasterUsername: analytics
      MasterUserPassword: "{{resolve:ssm:analytics_database_password}}"
      MaxAllocatedStorage: 250
      MultiAZ: false
      Port: "5432"
      PreferredBackupWindow: "03:00-04:00"
      PreferredMaintenanceWindow: "Sun:00:00-Sun:02:00"
      PubliclyAccessible: false
      VPCSecurityGroups:
        - !Ref AnalyticsDatabaseSecurityGroup

  AnalyticsLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 365
      LogGroupName:
        Fn::Join:
          - "/"
          - - ""
            - aws
            - lambda
            - !Ref AnalyticsLambda

  AnalyticsLambdaLoggingPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: analytics_lambda_logging_policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: !GetAtt AnalyticsLambdaLogGroup.Arn
      Roles:
        - !Ref AnalyticsLambdaRole

  AnalyticsLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: analytics_lambda_policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "ec2:CreateNetworkInterface"
              - "ec2:DeleteNetworkInterface"
              - "ec2:DescribeNetworkInterfaces"
              - "ec2:AssignPrivateIpAddresses"
              - "ec2:UnassignPrivateIpAddresses"
            Resource: "*"
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
            Resource:
              Fn::Sub: "arn:aws:logs:${AWS::Region}:${AWS::AccountId}::*"
      Roles:
        - !Ref AnalyticsLambdaRole

  AnalyticsLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: analytics_lambda_role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"

  AnalyticsLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: analytics_lambda
      Description: "Site analytics"
      Handler: unused
      Architectures:
        - arm64
      MemorySize: 512
      Runtime: provided.al2
      Timeout: 360
      Role: !GetAtt AnalyticsLambdaRole.Arn
      Code:
        S3Bucket: private.s3.blakerain.com
        S3Key: default-function.zip
      Environment:
        Variables:
          RUST_LOG: info
          DATABASE_ENDPOINT: !GetAtt AnalyticsDatabase.Endpoint.Address
          DATABASE_PASSWORD: "{{resolve:ssm:analytics_database_password}}"
      VpcConfig:
        SubnetIds:
          - !Ref AnalyticsSubnet1
          - !Ref AnalyticsSubnet2
        SecurityGroupIds:
          - !Ref AnalyticsLambdaSecurityGroup
    DependsOn:
      - AnalyticsLambdaPolicy

  AnalyticsLambdaDeployer:
    Type: AWS::IAM::User
    Properties:
      UserName: analytics_lambda_deployer

  AnalyticsLambdaDeployerAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref AnalyticsLambdaDeployer

  AnalyticsApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: blakerain_analytics_api
      Description: Analytics API
      ProtocolType: HTTP

  AnalyticsApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref AnalyticsApi
      ConnectionType: INTERNET
      IntegrationMethod: POST
      IntegrationType: AWS_PROXY
      TimeoutInMillis: 30000
      PayloadFormatVersion: "2.0"
      IntegrationUri: !GetAtt AnalyticsLambda.Arn

  AnalyticsApiRouteDefault:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AnalyticsApi
      ApiKeyRequired: false
      RouteKey: "$default"
      Target:
        Fn::Join:
          - "/"
          - - integrations
            - !Ref AnalyticsApiIntegration

  AnalyticsApiLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 365
      LogGroupName: "/aws/apigateway/blakerain_analytics_api"

  AnalyticsApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref AnalyticsApi
      StageName: "$default"
      AutoDeploy: true
      AccessLogSettings:
        DestinationArn: !GetAtt AnalyticsApiLogGroup.Arn
        Format: '$context.identity.sourceIp - - [$context.requestTime] "$context.httpMethod $context.routeKey $context.protocol" $context.status $context.responseLength $context.requestId'

  AnalyticsApiPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt AnalyticsLambda.Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ":"
          - - "arn:aws:execute-api"
            - !Sub "${AWS::Region}"
            - !Sub "${AWS::AccountId}"
            - Fn::Join:
                - "/"
                - - !Ref AnalyticsApi
                  - "*"
                  - "$default"

  AnalyticsApiDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName:
        Fn::Join:
          - "."
          - - analytics
            - !Ref DomainName
      DomainNameConfigurations:
        - CertificateArn: !Ref AnalyticsApiCertificate
          EndpointType: REGIONAL
          SecurityPolicy: TLS_1_2

  AnalyticsApiDomainMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      ApiId: !Ref AnalyticsApi
      DomainName: !Ref AnalyticsApiDomain
      Stage: !Ref AnalyticsApiStage

  AnalyticsApiCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName:
        Fn::Join:
          - "."
          - - analytics
            - !Ref DomainName
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName:
            Fn::Join:
              - "."
              - - analytics
                - !Ref DomainName
          HostedZoneId: !Ref HostedZoneId

  AnalyticsApiRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name:
        Fn::Join:
          - "."
          - - analytics
            - !Ref DomainName
      Type: A
      AliasTarget:
        HostedZoneId: !GetAtt AnalyticsApiDomain.RegionalHostedZoneId
        DNSName: !GetAtt AnalyticsApiDomain.RegionalDomainName
